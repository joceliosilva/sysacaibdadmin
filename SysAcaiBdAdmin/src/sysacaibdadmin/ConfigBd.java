/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package sysacaibdadmin;

import com.mysql.cj.xdevapi.Statement;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Esc_Big03
 */
public class ConfigBd extends javax.swing.JFrame {

    /** Creates new form ConfigBd */
    public ConfigBd() {
        initComponents();
        ConfigBd db = this;
        db.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        txtHost = new javax.swing.JTextField();
        txtPorta = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGerarBD = new javax.swing.JButton();
        txtsenha = new javax.swing.JPasswordField();
        btnGerarBD1 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GERADOR DE BD - SYSACAI");

        txtHost.setBorder(javax.swing.BorderFactory.createTitledBorder("HOST"));
        txtHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostActionPerformed(evt);
            }
        });

        txtPorta.setBorder(javax.swing.BorderFactory.createTitledBorder("PORTA"));

        txtUser.setBorder(javax.swing.BorderFactory.createTitledBorder("USUÁRIO"));

        btnGerarBD.setText("GERAR BD");
        btnGerarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBDActionPerformed(evt);
            }
        });

        txtsenha.setBorder(javax.swing.BorderFactory.createTitledBorder("SENHA"));

        btnGerarBD1.setText("EXCUIR BD");
        btnGerarBD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBD1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtsenha, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtHost, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(222, 222, 222))
                                .addComponent(txtPorta))
                            .addGap(49, 49, 49)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(btnGerarBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGerarBD1)
                .addGap(0, 91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(txtsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGerarBD)
                    .addComponent(btnGerarBD1))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBDActionPerformed
    String host = txtHost.getText();
    String porta = txtPorta.getText();
    String usuario = txtUser.getText();
    String senha = new String(txtsenha.getPassword()); // Obtém a senha como String

    // Crie a URL de conexão com base nos valores fornecidos
    String urlBanco = "jdbc:mysql://" + host + ":" + porta + "/";

    Connection conn = null;
    java.sql.Statement stmt = null;

    if (host.isEmpty() || porta.isEmpty() || usuario.isEmpty() || senha.isEmpty()) {
        // Exiba uma mensagem de erro ao usuário
        JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
    }else{
    try {
        // Estabeleça a conexão com o servidor MySQL
        conn = DriverManager.getConnection(urlBanco, usuario, senha);

        // Crie o banco de dados se ele não existir
        stmt = conn.createStatement();
        String nomeBanco = "sysacai"; // Substitua pelo nome desejado
        String sql = "CREATE DATABASE IF NOT EXISTS " + nomeBanco;
        
        System.out.println("Banco de dados criado com sucesso.");
        
          String sql1 = "USE "+ nomeBanco; // Os comandos SQL que você mencionou

     
        System.out.println("usando db.");

        // Execute os comandos SQL para criar tabelas e inserir dados
        String sql2 = 
"CREATE TABLE `estoque` (\n" +
"  `id` int(11) NOT NULL,\n" +
"  `quantidade` int(11) DEFAULT NULL\n" +
") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n";
                
   String sql3 = "CREATE TABLE `loja` (\n" +
"  `id` int(11) NOT NULL,\n" +
"  `nome` varchar(255) DEFAULT NULL,\n" +
"  `logo` blob DEFAULT NULL\n" +
") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n";
           
           
   String sql4 = "CREATE TABLE `produto` (\n" +
"  `id` int(11) NOT NULL,\n" +
"  `nome` varchar(255) DEFAULT NULL,\n" +
"  `preco` decimal(10,2) DEFAULT NULL,\n" +
"  `estoque_id` int(11) DEFAULT NULL\n" +
") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n";
           
           
   String sql5 = "CREATE TABLE `tigela` (\n" +
"  `id` int(11) NOT NULL,\n" +
"  `nome` varchar(255) DEFAULT NULL,\n" +
"  `tara` decimal(10,2) DEFAULT NULL,\n" +
"  `unica` tinyint(1) DEFAULT NULL\n" +
") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n";
           
          
   String sql6 = "CREATE TABLE `usuario` (\n" +
"  `id` int(11) NOT NULL,\n" +
"  `nome` varchar(255) DEFAULT NULL,\n" +
"  `senha` varchar(255) DEFAULT NULL\n" +
") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n";
   
 String sql7= "INSERT INTO `usuario` (`id`, `nome`, `senha`) VALUES\n" +
"(1, 'admin', 'admin123');\n";
 
  String sql8= "INSERT INTO `loja` (`id`, `nome`, `logo`) VALUES\n" +
"(1, 'DEFAULT', null);\n";
  
String sql9 = "ALTER TABLE `estoque`\n" +
"  ADD PRIMARY KEY (`id`);\n" +
"ALTER TABLE `produto`\n" +
"  ADD PRIMARY KEY (`id`),\n" +
"  ADD KEY `estoque_id` (`estoque_id`);\n" +
"ALTER TABLE `tigela`\n" +
"  ADD PRIMARY KEY (`id`);\n" +
"ALTER TABLE `usuario`\n" +
"  ADD PRIMARY KEY (`id`);\n" +
"ALTER TABLE `estoque`\n" +
"  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;\n" +
"ALTER TABLE `produto`\n" +
"  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;\n" +
"ALTER TABLE `tigela`\n" +
"  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;\n" +
"ALTER TABLE `usuario`\n" +
"  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;\n" +
"ALTER TABLE `produto`\n" +
"  ADD CONSTRAINT `produto_ibfk_1` FOREIGN KEY (`estoque_id`) REFERENCES `estoque` (`id`);\n" ;
   
     stmt.executeUpdate(sql);
        stmt.executeUpdate(sql1);
        stmt.executeUpdate(sql6);
         stmt.executeUpdate(sql3);
          stmt.executeUpdate(sql4);
           stmt.executeUpdate(sql5);
            stmt.executeUpdate(sql2);
             stmt.executeUpdate(sql7);
                    stmt.executeUpdate(sql8);
        JOptionPane.showMessageDialog(null,"BANCO DE DADOS GERADO COM SUCESSO!");
        dispose();
        
    

       

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "ERRO AO GERAR BANCO, UM BANCO JÁ EXISTE NO:" + host);
    } finally {
        try {
            if (stmt != null) {
                stmt.close();
            }
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }}
    }//GEN-LAST:event_btnGerarBDActionPerformed

    private void txtHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostActionPerformed
      
    }//GEN-LAST:event_txtHostActionPerformed

    private void btnGerarBD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBD1ActionPerformed
         String host = txtHost.getText();
    String porta = txtPorta.getText();
    String usuario = txtUser.getText();
    String senha = new String(txtsenha.getPassword()); // Obtém a senha como String

    // Crie a URL de conexão com base nos valores fornecidos
    String urlBanco = "jdbc:mysql://" + host + ":" + porta + "/";

    Connection conn = null;
    java.sql.Statement stmt = null;
        int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza de que deseja excluir o banco de dados?", "Confirmação", JOptionPane.YES_NO_OPTION);

         if (resposta == JOptionPane.YES_OPTION) {
    if (host.isEmpty() || porta.isEmpty() || usuario.isEmpty() || senha.isEmpty()) {
        // Exiba uma mensagem de erro ao usuário
        JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
    }else{
    try {
        // Estabeleça a conexão com o servidor MySQL
        conn = DriverManager.getConnection(urlBanco, usuario, senha);

        // Crie o banco de dados se ele não existir
        stmt = conn.createStatement();
        String nomeBanco = "sysacai"; // Substitua pelo nome desejado
        String sql = "DROP DATABASE " + nomeBanco;
        stmt.execute(sql);
        JOptionPane.showMessageDialog(null,"BANCO DE DADOS EXCLUÍDO");
        dispose();
        

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "ERRO AO EXCLUIR BANCO. NENUM BANCO ENCONTRADO EM :" + host);
    } finally {
        try {
            if (stmt != null) {
                stmt.close();
            }
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    }
         }else{
             dispose();
         }
    }//GEN-LAST:event_btnGerarBD1ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigBd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerarBD;
    private javax.swing.JButton btnGerarBD1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtPorta;
    private javax.swing.JTextField txtUser;
    private javax.swing.JPasswordField txtsenha;
    // End of variables declaration//GEN-END:variables

}
