/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package sysacaibdadmin;

import com.mysql.cj.xdevapi.Statement;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.SQLException;

/**
 *
 * @author Esc_Big03
 */
public class ConfigBd extends javax.swing.JFrame {

    /** Creates new form ConfigBd */
    public ConfigBd() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        txtHost = new javax.swing.JTextField();
        txtPorta = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        USUÁRIO = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGerarBD = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtsenha = new javax.swing.JPasswordField();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("HOST");

        USUÁRIO.setText("USUÁRIO");

        jLabel4.setText("SENHA");

        btnGerarBD.setText("GERAR BD");
        btnGerarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBDActionPerformed(evt);
            }
        });

        jLabel5.setText("PORTA");

        txtsenha.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(btnGerarBD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(USUÁRIO)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtHost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPorta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtsenha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(USUÁRIO)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGerarBD)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBDActionPerformed
        String host = txtHost.getText();
    String porta = txtPorta.getText();
    String usuario = txtUser.getText();
    String senha = new String(txtsenha.getPassword()); // Obtém a senha como String

    // Crie a URL de conexão com base nos valores fornecidos
    String urlBanco = "jdbc:mysql://" + host + ":" + porta + "/";

    Connection conn = null;
    java.sql.Statement stmt = null;

    try {
        // Estabeleça a conexão com o servidor MySQL
        conn = DriverManager.getConnection(urlBanco, usuario, senha);

        // Crie o banco de dados se ele não existir
        stmt = conn.createStatement();
        String nomeBanco = "sysacai"; // Substitua pelo nome desejado
        String sql = "CREATE DATABASE IF NOT EXISTS " + nomeBanco;
        stmt.executeUpdate(sql);
        System.out.println("Banco de dados criado com sucesso.");
        
         conn.setCatalog(nomeBanco);

        // Execute os comandos SQL para criar tabelas e inserir dados
        String sql2 = "SET SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO';\n" +
             "START TRANSACTION;\n" +
             "SET time_zone = '+00:00';\n" +
             "\n" +
             "CREATE TABLE `estoque` (\n" +
             "  `id` int(11) NOT NULL,\n" +
             "  `quantidade` int(11) DEFAULT NULL\n" +
             ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n" +
             "\n" +
             "CREATE TABLE `loja` (\n" +
             "  `id` int(11) NOT NULL,\n" +
             "  `nome` varchar(255) DEFAULT NULL,\n" +
             "  `logo` blob DEFAULT NULL\n" +
             ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n" +
             "\n" +
             "CREATE TABLE `produto` (\n" +
             "  `id` int(11) NOT NULL,\n" +
             "  `nome` varchar(255) DEFAULT NULL,\n" +
             "  `preco` decimal(10,2) DEFAULT NULL,\n" +
             "  `estoque_id` int(11) DEFAULT NULL\n" +
             ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n" +
             "\n" +
             "CREATE TABLE `tigela` (\n" +
             "  `id` int(11) NOT NULL,\n" +
             "  `nome` varchar(255) DEFAULT NULL,\n" +
             "  `tara` decimal(10,2) DEFAULT NULL,\n" +
             "  `unica` tinyint(1) DEFAULT NULL\n" +
             ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n" +
             "\n" +
             "CREATE TABLE `usuario` (\n" +
             "  `id` int(11) NOT NULL,\n" +
             "  `nome` varchar(255) DEFAULT NULL,\n" +
             "  `senha` varchar(255) DEFAULT NULL\n" +
             ") ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;\n" +
             "\n" +
             "--\n" +
             "INSERT INTO `usuario` (`id`, `nome`, `senha`) VALUES\n" +
             "(1, 'admin', 'admin123');\n" +
             "\n" +
             "--\n" +
             "-- Índices para tabelas despejadas\n" +
             "--\n" +
             "--\n" +
             "-- Índices para tabela `estoque`\n" +
             "--\n" +
             "ALTER TABLE `estoque`\n" +
             "  ADD PRIMARY KEY (`id`);\n" +
             "\n" +
             "--\n" +
             "-- Índices para tabela `produto`\n" +
             "--\n" +
             "ALTER TABLE `produto`\n" +
             "  ADD PRIMARY KEY (`id`),\n" +
             "  ADD KEY `estoque_id` (`estoque_id`);\n" +
             "\n" +
             "--\n" +
             "-- Índices para tabela `tigela`\n" +
             "--\n" +
             "ALTER TABLE `tigela`\n" +
             "  ADD PRIMARY KEY (`id`);\n" +
             "\n" +
             "--\n" +
             "-- Índices para tabela `usuario`\n" +
             "--\n" +
             "ALTER TABLE `usuario`\n" +
             "  ADD PRIMARY KEY (`id`);\n" +
             "\n" +
             "--\n" +
             "-- AUTO_INCREMENT de tabelas despejadas\n" +
             "--\n" +
             "--\n" +
             "-- AUTO_INCREMENT de tabela `estoque`\n" +
             "--\n" +
             "ALTER TABLE `estoque`\n" +
             "  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;\n" +
             "\n" +
             "--\n" +
             "-- AUTO_INCREMENT de tabela `produto`\n" +
             "--\n" +
             "ALTER TABLE `produto`\n" +
             "  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;\n" +
             "\n" +
             "--\n" +
             "-- AUTO_INCREMENT de tabela `tigela`\n" +
             "--\n" +
             "ALTER TABLE `tigela`\n" +
             "  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;\n" +
             "\n" +
             "--\n" +
             "-- AUTO_INCREMENT de tabela `usuario`\n" +
             "--\n" +
             "ALTER TABLE `usuario`\n" +
             "  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;\n" +
             "\n" +
             "--\n" +
             "-- Restrições para despejos de tabelas\n" +
             "--\n" +
             "--\n" +
             "-- Limitadores para a tabela `produto`\n" +
             "--\n" +
             "ALTER TABLE `produto`\n" +
             "  ADD CONSTRAINT `produto_ibfk_1` FOREIGN KEY (`estoque_id`) REFERENCES `estoque` (`id`);\n" +
             "COMMIT;";

        stmt.executeUpdate(sql2);
        System.out.println("Tabelas e dados criados com sucesso.");

    } catch (SQLException ex) {
        ex.printStackTrace();
    } finally {
        try {
            if (stmt != null) {
                stmt.close();
            }
            if (conn != null) {
                conn.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_btnGerarBDActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigBd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigBd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel USUÁRIO;
    private javax.swing.JButton btnGerarBD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtPorta;
    private javax.swing.JTextField txtUser;
    private javax.swing.JPasswordField txtsenha;
    // End of variables declaration//GEN-END:variables

}
